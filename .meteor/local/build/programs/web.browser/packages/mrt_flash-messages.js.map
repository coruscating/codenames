)]}'
{"version":3,"file":"/packages/mrt:flash-messages.js","sources":["mrt:flash-messages/messages.js","mrt:flash-messages/messages_list.html","mrt:flash-messages/messages_list.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,G;AACA,iB;AACA,qB;AACA,mB;AACA,oB;AACA,G;AACA,2C;;AAEA,iB;AACA,+F;AACA,yC;AACA,sC;AACA,oE;AACA,I;AACA,2C;AACA,mD;AACA,I;AACA,yC;AACA,8D;AACA,I;AACA,2C;AACA,mD;AACA,I;AACA,wC;AACA,gD;AACA,I;AACA,qB;AACA,uC;AACA,I;AACA,gC;AACA,sC;AACA,oC;AACA,I;AACA,Y;AACA,mB;AACA,oB;AACA,oB;AACA,G;AACA,C;;AAEA,iD;AACA,0B;AACA,wG;AACA,2E;AACA,2F;AACA,C;;;;;;;;;;;;;;;;;;;AC5CA,sC;AACA,gF;AACA,kB;AACA,gC;AACA,mD;AACA,iB;AACA,6F;AACA,K;AACA,I;;AAEA,yC;AACA,sF;AACA,kB;AACA,mB;AACA,yB;AACA,0F;AACA,M;AACA,iB;AACA,gJ;AACA,gD;AACA,iB;AACA,sE;AACA,oD;AACA,mB;AACA,8D;AACA,uE;AACA,0B;AACA,gC;AACA,iB;AACA,gD;AACA,2E;AACA,mB;AACA,c;AACA,I;;;;;;;;;;;;;;;;;;;AClCA,gC;AACA,yB;AACA,yE;AACA,+B;AACA,oB;AACA,c;AACA,gD;AACA,6C;AACA,mD;AACA,O;AACA,oB;AACA,G;AACA,G;;AAEA,kD;AACA,0B;AACA,2B;AACA,4D;AACA,K;AACA,oD;AACA,oC;AACA,kC;AACA,wC;AACA,mD;AACA,e;AACA,S;AACA,iC;AACA,G;AACA,E;;AAEA,kC;AACA,sC;AACA,uB;AACA,wC;AACA,G;AACA,G","sourcesContent":["/**\n * flashMessages \n * { message: String,\n *   style: String,\n *   seen: Boolean }\n */\nflashMessages = new Mongo.Collection(null);\n\nFlashMessages = {\n  // Deprecated, use sendWarning instead. sendWarning is more consistent with Boostrap classes.\n  sendAlert: function(message, options) {\n    sendMessage(message, '', options);\n    console.log('Deprecated, use sendWarning instead of sendAlert');\n  },\n  sendWarning: function(message, options) {\n    sendMessage(message, 'alert-warning', options);\n  },\n  sendError: function(message, options) {\n    sendMessage(message, 'alert-error alert-danger', options);\n  },\n  sendSuccess: function(message, options) {\n    sendMessage(message, 'alert-success', options);\n  },\n  sendInfo: function(message, options) {\n    sendMessage(message, 'alert-info', options);\n  },\n  clear: function() {\n    flashMessages.remove({seen: true});\n  },\n  configure: function(options) {\n    this.options = this.options || {};\n    _.extend(this.options, options);\n  },\n  options: {\n    autoHide: true,\n    hideDelay: 5000,\n    autoScroll: true\n  }\n}\n\nsendMessage = function(message, style, options) {\n  options = options || {};\n  options.autoHide = options.autoHide === undefined ? FlashMessages.options.autoHide : options.autoHide;\n  options.hideDelay = options.hideDelay || FlashMessages.options.hideDelay;\n  flashMessages.insert({ message: message, style: style, seen: false, options: options});  \n}","\nTemplate.__checkName(\"flashMessages\");\nTemplate[\"flashMessages\"] = new Template(\"Template.flashMessages\", (function() {\n  var view = this;\n  return Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \" \\n    \", Spacebars.include(view.lookupTemplate(\"flashMessageItem\")), \"\\n  \" ];\n  });\n}));\n\nTemplate.__checkName(\"flashMessageItem\");\nTemplate[\"flashMessageItem\"] = new Template(\"Template.flashMessageItem\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return [ \"alert \", Spacebars.mustache(view.lookup(\"style\")), \" alert-dismissable\" ];\n    },\n    role: \"alert\"\n  }, HTML.Raw('\\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>\\n    '), Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"group\"));\n  }, function() {\n    return [ \"\\n      \", HTML.UL(\"\\n        \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"message\"));\n    }, function() {\n      return [ \"\\n          \", HTML.LI(Blaze.View(function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\".\")));\n      })), \"\\n        \" ];\n    }), \"\\n      \"), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      \", Blaze.View(function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"message\")));\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.flashMessages.helpers({\n  messages: function () {\n    if (flashMessages.find().count() && FlashMessages.options.autoScroll)\n      $('html, body').animate({\n        scrollTop: 0\n      }, 200);\n    var messages = flashMessages.find().fetch();\n    $.each(messages, function(index, value) {\n      value.group = value.message instanceof Array;\n    });\n    return messages;\n  }\n});\n\nTemplate.flashMessageItem.rendered = function () {\n  var message = this.data;\n  Meteor.defer(function() {\n    flashMessages.update(message._id, {$set: {seen: true}});\n  });\n  if (message.options && message.options.autoHide) {\n    $alert = $(this.find('.alert'));\n    Meteor.setTimeout(function() {\n        $alert.fadeOut(400, function() {\n          flashMessages.remove({_id: message._id});\n        });    \n      }, \n      message.options.hideDelay);\n  }\n};\n\nTemplate.flashMessageItem.events({\n  \"click .close\": function (e, tmpl) {\n    e.preventDefault();\n    flashMessages.remove(tmpl.data._id);\n  }\n});"]}